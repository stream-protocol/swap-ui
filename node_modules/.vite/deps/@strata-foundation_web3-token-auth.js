import {
  __commonJS
} from "./chunk-5537U2Q2.js";

// node_modules/localstorage-memory/lib/localstorage-memory.js
var require_localstorage_memory = __commonJS({
  "node_modules/localstorage-memory/lib/localstorage-memory.js"(exports, module) {
    (function(root) {
      var localStorageMemory = {};
      var cache = {};
      localStorageMemory.length = 0;
      localStorageMemory.getItem = function(key) {
        if (key in cache) {
          return cache[key];
        }
        return null;
      };
      localStorageMemory.setItem = function(key, value) {
        if (typeof value === "undefined") {
          localStorageMemory.removeItem(key);
        } else {
          if (!cache.hasOwnProperty(key)) {
            localStorageMemory.length++;
          }
          cache[key] = "" + value;
        }
      };
      localStorageMemory.removeItem = function(key) {
        if (cache.hasOwnProperty(key)) {
          delete cache[key];
          localStorageMemory.length--;
        }
      };
      localStorageMemory.key = function(index) {
        return Object.keys(cache)[index] || null;
      };
      localStorageMemory.clear = function() {
        cache = {};
        localStorageMemory.length = 0;
      };
      if (typeof exports === "object") {
        module.exports = localStorageMemory;
      } else {
        root.localStorageMemory = localStorageMemory;
      }
    })(exports);
  }
});

// node_modules/@strata-foundation/web3-token-auth/dist/lib/index.js
var require_lib = __commonJS({
  "node_modules/@strata-foundation/web3-token-auth/dist/lib/index.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.tokenAuthFetchMiddleware = exports.LocalTokenStorage = void 0;
    var storage = typeof localStorage !== "undefined" ? localStorage : require_localstorage_memory();
    var LocalTokenStorage = class {
      setToken(token) {
        storage.setItem("auth-token", token);
        storage.setItem("last-set", new Date().valueOf());
      }
      getTimeSinceLastSet() {
        if (storage.getItem("last-set")) {
          return new Date().valueOf() - Number(storage.getItem("last-set"));
        }
        return null;
      }
      getToken() {
        return storage.getItem("auth-token");
      }
    };
    exports.LocalTokenStorage = LocalTokenStorage;
    function tokenAuthFetchMiddleware({
      tokenStorage = new LocalTokenStorage(),
      tokenExpiry = 5 * 60 * 1e3,
      getToken
    }) {
      return (url, options, fetch) => {
        (() => __awaiter(this, void 0, void 0, function* () {
          try {
            const token = tokenStorage.getToken();
            const timeSinceLastSet = tokenStorage.getTimeSinceLastSet();
            const tokenIsValid = token && timeSinceLastSet && timeSinceLastSet < tokenExpiry;
            if (!tokenIsValid) {
              tokenStorage.setToken(yield getToken());
            }
          } catch (e) {
            console.error(e);
          }
          fetch(url, Object.assign(Object.assign({}, options || {}), { headers: Object.assign(Object.assign({}, (options || {}).headers), { "Authorization": "Bearer " + tokenStorage.getToken() }) }));
        }))();
      };
    }
    exports.tokenAuthFetchMiddleware = tokenAuthFetchMiddleware;
  }
});

// dep:@strata-foundation_web3-token-auth
var strata_foundation_web3_token_auth_default = require_lib();
export {
  strata_foundation_web3_token_auth_default as default
};
//# sourceMappingURL=@strata-foundation_web3-token-auth.js.map
